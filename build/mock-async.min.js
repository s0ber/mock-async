/*! mock-async (v0.1.0),
 Simple one-method library for mocking asynchronous methods,
 by Sergey Shishkalov <sergeyshishkalov@gmail.com>
 Wed May 21 2014 */
(function(){var t;t={},null==window.modula&&(window.modula={"export":function(e,n){return t[e]=n},require:function(e){var n;if(n=t[e])return n;throw"Module '"+e+"' not found."}})}).call(this),function(){var t,e=[].slice;window.mockAsync=function(e,n){return new t(e,n)},t=function(){function t(t,e){this.object=t,this.methodName=e,this.prevMethodFn=this.object[this.methodName],this.defaultCallResult=null,this.callResultsForArgs={},this._mockMehod()}return t.prototype.shouldReturn=function(t){return this.defaultCallResult=_.isFunction(t)?t():t},t.prototype.whenCalledWith=function(){var t,n;return t=1<=arguments.length?e.call(arguments,0):[],n=this._getUniqIdForArgs(t),{shouldReturn:function(t){return function(e){return t.callResultsForArgs[n]=_.isFunction(e)?e():e}}(this)}},t.prototype.restore=function(){return this.object[this.methodName]=this.prevMethodFn},t.prototype._mockMehod=function(){return this.object[this.methodName]=_.bind(this._mockedMethod,this)},t.prototype._mockedMethod=function(){var t,n,o;return t=1<=arguments.length?e.call(arguments,0):[],n=t.length>0?this.callResultsForArgs[this._getUniqIdForArgs(t)]||this.defaultCallResult:this.defaultCallResult,o=new $.Deferred,o.resolve(n)},t.prototype._getUniqIdForArgs=function(t){var e,n,o,r;for(n="",o=0,r=t.length;r>o;o++)e=t[o],_.isObject(e)?n+=JSON.stringify(e):_.isString(e)&&(n+=e);return n},t}(),modula["export"]("mock_api",t)}.call(this);